// Code generated by ent-elastic, DO NOT EDIT.

package migrate

import (
    "context"
    "github.com/guihouchang/go-elasticsearch/schema/field"
    "github.com/olivere/elastic"
)

var (
    {{range .}}
    {{ToCamelCase .Name}}Mapping = &field.Mapping{
        Name: "{{ToUnderscore .Name}}",
        Properties: map[string]field.Property{
           {{range .Fields}}
            "{{ToUnderscore .Name}}": map[string]interface{}{
                "type": "{{ESType .Info.Type}}",
                {{range RendProperty .}}{{.}},
                {{end}}
            },
           {{end}}
        },

    }
    {{end}}

    Tables = []*field.Mapping{
        {{range .}}{{ToCamelCase .Name}}Mapping,{{end}}

    }
)

type Schema struct {
    client *elastic.Client
}

func NewSchema(client *elastic.Client) *Schema {
 return &Schema{client: client}
}

func (s *Schema) Create(ctx context.Context) error {
    return Create(ctx, s, Tables)
}

func Create(ctx context.Context, s *Schema, mappings []*field.Mapping) error {
    for _, m := range mappings {
        _, err := s.client.CreateIndex(m.Name).BodyJson(m.Properties).Do(ctx)
        if err != nil {
            return err
        }
    }

    return nil
}